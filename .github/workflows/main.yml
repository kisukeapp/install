name: Build and Upload tar.xz Assets to Release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
  release:
    types: [published]

permissions:
  contents: write
  actions: read

jobs:
  build:
    if: github.event_name == 'release' || (github.event_name == 'push' && contains(fromJson('["OWNER", "COLLABORATOR", "MEMBER"]'), github.event.sender.type)) || github.event_name == 'workflow_dispatch'
    
    strategy:
      matrix:
        include:
          - arch: x64
            runner: ubuntu-latest
            override_arch: x86_64
          - arch: arm64
            runner: buildjet-4vcpu-ubuntu-2204-arm
            override_arch: arm64
    
    runs-on: ${{ matrix.runner }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Write VERSION file
        run: echo "${GITHUB_REF_NAME}" > VERSION
      
      - name: Inject version into setup.sh
        run: |
          sed -i "s/INJECT_VERSION_HERE/${GITHUB_REF_NAME}/g" setup.sh
          echo "Injected version ${GITHUB_REF_NAME} into setup.sh"
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl tar xz-utils git build-essential
      
      - name: Debug bash version
        run: |
          echo "Shell: $SHELL"
          bash --version
          which bash
          ls -l $(which bash)
        shell: bash

      - name: Run package.sh
        shell: bash
        run: |
          export OVERRIDE_ARCH="${{ matrix.override_arch }}"
          echo "Building for architecture: $OVERRIDE_ARCH on runner: ${{ matrix.runner }}"
          bash package.sh
      
      - name: List and prepare files for upload
        id: prepare_files
        run: |
          ls -la $HOME/
          
          find $HOME -maxdepth 1 -name "kisuke-*.tar.xz" -ls
          
          cp $HOME/kisuke-*.tar.xz . 2>/dev/null || echo "No kisuke-*.tar.xz files found in $HOME"
          
          ls -la .
          
          if [ -f "setup.sh" ]; then
            echo "setup.sh found"
          else
            echo "ERROR: setup.sh not found!"
            exit 1
          fi
          if [ -f "VERSION" ]; then
            echo "VERSION file found, contents:"
            cat VERSION
          else
            echo "ERROR: VERSION file not found!"
            exit 1
          fi
        shell: bash

      - name: Bundle Python scripts
        run: |
          scripts_bundle="kisuke-bridge-${GITHUB_REF_NAME}.tar.xz"
          echo "Creating bundle: $scripts_bundle"
          tar -cJf "$scripts_bundle" scripts/
          echo "Created scripts bundle: $scripts_bundle"
          ls -la "$scripts_bundle"
        shell: bash

      - name: List final files for upload
        run: |
          ls -la *.tar.xz setup.sh VERSION
        shell: bash

      - name: Create release and upload files
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.KISUKE_GH_TOKEN }}
        with:
          tag_name: "${{ github.ref_name }}"
          name: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            setup.sh
            VERSION
            kisuke-*.tar.xz